#!/bin/bash

# Failover script: sets default routes on active WANs according to priority
# written by Gian Luca Vagnuzzi <vagnu00@gmx.com>
# Reads the status of the WANs from /tmp/wan_status.txt (generated by checkwan.sh)
#
# rev. 29.09.2025

fwlVarConfDir="/var/lib/firewall"
source "$fwlVarConfDir/toFailoverEnvs.sh"
[ -e "$customConfFile" ] && grep -e '^ *FORCE' -e '^ *WAN' "$customConfFile" > /tmp/wanIfFile && source /tmp/wanIfFile

declare -A wan_status
WAN_STATUS_FILE="/tmp/wan_status.txt"

log() {
    local timestamp="[$(date '+%Y-%m-%d %H:%M:%S')]"
    local raw="$*"
    local clean=$(echo -e "$raw" | sed -E 's/\x1B\[[0-9;]*[JKmsu]//g' | tr -d '\n')

    echo -e "$timestamp [failover] $raw"
    logger -t firewall "[failover] $clean"
}


read_wan_status() {
    if [[ ! -f "$WAN_STATUS_FILE" ]]; then
        log "ERROR" "WAN status file not found: $WAN_STATUS_FILE"
        return 1
    fi

    while IFS='=' read -r gw state; do
        wan_status["$gw"]="$state"
    done < "$WAN_STATUS_FILE"
}

set_routes() {
    # Clear existing default routes
    ip route flush 0/0

    # Create WAN list sorted by priority
    tmp_list=()
    for i in "${!WAN[@]}"; do
        IFS=',' read -r iface gw ord <<< "${WAN[$i]}"
        tmp_list+=("$ord|$iface|$gw")
    done

    IFS=$'\n' sorted=($(sort -n <<<"${tmp_list[*]}"))
    unset IFS

    first=true
    metric=100

    for entry in "${sorted[@]}"; do
        IFS='|' read -r ord iface gw <<< "$entry"

        if [[ "${wan_status[$gw]}" == "up" ]]; then
            if $first; then
                ip route add default via "$gw" dev "$iface" metric 0
                log "INFO" "Added default route via $iface ($gw) **metric 0** (primary)"
                first=false
            else
                ip route add default via "$gw" dev "$iface" metric "$metric"
                log "INFO" "Added default route via $iface ($gw) metric $metric"
                metric=$((metric + 100))
            fi
        else
            log "WARN" "WAN $iface ($gw) is DOWN, skipping route"
        fi
    done
}

main() {
    read_wan_status || exit 1
    set_routes
}

main
